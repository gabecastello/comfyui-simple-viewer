/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WorkflowSchema {
  version: 1;
  config?:
    | (
        | {
            [k: string]: unknown;
          }
        | {
            links_ontop?: boolean;
            align_to_grid?: boolean;
            [k: string]: unknown;
          }
      )
    | null;
  state: {
    lastGroupid?: number;
    lastNodeId?: number;
    lastLinkId?: number;
    lastRerouteId?: number;
    [k: string]: unknown;
  };
  groups?: {
    title: string;
    /**
     * @minItems 4
     * @maxItems 4
     */
    bounding: [number, number, number, number];
    color?: string;
    font_size?: number;
    locked?: boolean;
    [k: string]: unknown;
  }[];
  nodes: {
    id: number | string;
    type: string;
    pos:
      | {
          '0': number;
          '1': number;
          [k: string]: unknown;
        }
      | [number, number];
    size:
      | {
          '0': number;
          '1': number;
          [k: string]: unknown;
        }
      | [number, number];
    flags: {
      collapsed?: boolean;
      pinned?: boolean;
      allow_interaction?: boolean;
      horizontal?: boolean;
      skip_repeated_outputs?: boolean;
      [k: string]: unknown;
    };
    order: number;
    mode: number;
    inputs?: {
      name: string;
      type: string | string[] | number;
      link?: number | null;
      slot_index?: number | string;
      [k: string]: unknown;
    }[];
    outputs?: {
      name: string;
      type: string | string[] | number;
      links?: number[] | null;
      slot_index?: number | string;
      [k: string]: unknown;
    }[];
    properties: {
      'Node name for S&R'?: string;
      [k: string]: unknown;
    };
    widgets_values?:
      | unknown[]
      | {
          [k: string]: unknown;
        };
    color?: string;
    bgcolor?: string;
    [k: string]: unknown;
  }[];
  links?: {
    id: number;
    origin_id: number | string;
    origin_slot: number | string;
    target_id: number | string;
    target_slot: number | string;
    type: string | string[] | number;
    parentId?: number;
    [k: string]: unknown;
  }[];
  reroutes?: {
    id: number;
    parentId?: number;
    pos:
      | {
          '0': number;
          '1': number;
          [k: string]: unknown;
        }
      | [number, number];
    linkIds?: number[] | null;
    [k: string]: unknown;
  }[];
  extra?:
    | (
        | {
            [k: string]: unknown;
          }
        | {
            ds?: {
              scale: number;
              offset:
                | {
                    '0': number;
                    '1': number;
                    [k: string]: unknown;
                  }
                | [number, number];
              [k: string]: unknown;
            };
            info?: {
              name: string;
              author: string;
              description: string;
              version: string;
              created: string;
              modified: string;
              software: string;
              [k: string]: unknown;
            };
            linkExtensions?: {
              id: number;
              parentId: number;
              [k: string]: unknown;
            }[];
            reroutes?: {
              id: number;
              parentId?: number;
              pos:
                | {
                    '0': number;
                    '1': number;
                    [k: string]: unknown;
                  }
                | [number, number];
              linkIds?: number[] | null;
              [k: string]: unknown;
            }[];
            [k: string]: unknown;
          }
      )
    | null;
  models?: {
    name: string;
    url: string;
    hash?: string;
    hash_type?: string;
    directory: string;
  }[];
  [k: string]: unknown;
}
